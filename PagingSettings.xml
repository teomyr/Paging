<Ui xmlns="http://www.blizzard.com/wow/ui/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.blizzard.com/wow/ui/ ..\FrameXML\UI.xsd">
	<Frame name="PagingSettingsFrame" hidden="true">
		<Layers>
			<Layer level="OVERLAY">
				<FontString name="$parentProfileSelectionLabel" inherits="GameFontNormal">
					<Anchors>
						<Anchor point="TOPLEFT" relativePoint="TOPLEFT">
							<Offset x="15" y="-20" />
						</Anchor>
					</Anchors>
				</FontString>
				
				<FontString name="$parentEditSelectorTextLabel" inherits="GameFontNormal">
					<Anchors>
						<Anchor point="TOPLEFT" relativePoint="TOPLEFT">
							<Offset x="15" y="-210" />
						</Anchor>
					</Anchors>
				</FontString>
				
				<FontString name="$parentVersion" inherits="GameFontDisable">
					<Anchors>
						<Anchor point="BOTTOMRIGHT">
							<Offset x="-20" y="20" />
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		
		<Frames>
			<Frame name="$parentProfileSelection" inherits="UIDropDownMenuTemplate" enableMouse="true">
				<Anchors>
					<Anchor relativeTo="$parentProfileSelectionLabel" point="LEFT" relativePoint="RIGHT">
						<Offset y="-3" />
					</Anchor>
				</Anchors>

				<Scripts>
					<OnLoad>
						self.type = CONTROLTYPE_DROPDOWN;
						self.label = getglobal(self:GetName() .. "Label");
						self.label:SetText(PagingL["Profile:"]);
						
						UIDropDownMenu_Initialize(self, PagingSettingsFrameProfileSelection_DropDownCallback);
						
						UIDropDownMenu_SetWidth(self, 275, 5); 
						UIDropDownMenu_JustifyText(self, "LEFT");
					</OnLoad>
				</Scripts>
			</Frame>
			
			<CheckButton name="$parentAutoChooseProfile" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor relativeTo="$parentProfileSelection" point="TOPLEFT" relativePoint="BOTTOMLEFT">
						<Offset x="15" y="-8" />
					</Anchor>
				</Anchors>
				
				<Layers>
					<Layer level="OVERLAY">
						<FontString name="$parentHelpText" inherits="GameFontWhite" justifyH="LEFT" justifyV="TOP">
							<Anchors>
								<Anchor relativeTo="$parentText" point="TOPLEFT" relativePoint="BOTTOMLEFT">
									<Offset y="-10" />
								</Anchor>
							</Anchors>
							
							<Size>
								<AbsDimension x="500" y="80" />
							</Size>
						</FontString>
					</Layer>
				</Layers>
				
				<Scripts>
					<OnLoad>
						self.label = getglobal(self:GetName() .. "Text");
						self.label:SetText(PagingL["Automatically choose matching profile"]);
						
						self.helpText = getglobal(self:GetName() .. "HelpText");
						self.helpText:SetText(
							PagingL["Selects the most appropriate profile automatically at each login."] .."\n"..
							PagingL["The relevant profile is tagged with \"automatic\" in the list."] .. "\n" ..
							PagingL["Profiles at the top of the list have priority over those at the bottom."]
						);
					</OnLoad>
					<OnClick function="PagingSettingsFrameAutoChooseProfile_OnClick" />
				</Scripts>
			</CheckButton>

			<CheckButton name="$parentOverrideModifiers" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor relativeTo="$parentProfileSelection" point="TOPLEFT" relativePoint="BOTTOMLEFT">
						<Offset x="15" y="-90" />
					</Anchor>
				</Anchors>
				
				<Layers>
					<Layer level="OVERLAY">
						<FontString name="$parentHelpText" inherits="GameFontWhite" justifyH="LEFT" justifyV="TOP">
							<Anchors>
								<Anchor relativeTo="$parentText" point="TOPLEFT" relativePoint="BOTTOMLEFT">
									<Offset y="-10" />
								</Anchor>
							</Anchors>
							
							<Size>
								<AbsDimension x="500" y="80" />
							</Size>
						</FontString>
					</Layer>
				</Layers>
				
				<Scripts>
					<OnLoad>
						self.label = getglobal(self:GetName() .. "Text");
						self.label:SetText(PagingL["Adjust key bindings for modifiers"]);
						
						self.helpText = getglobal(self:GetName() .. "HelpText");
						self.helpText:SetText(
							PagingL["Make sure that key presses involving modifiers such as CTRL, ALT or SHIFT go to the correct action buttons."] .. " " ..
							PagingL["This option is recommended unless you want to handle conflicting key bindings (e.g. with the pet bar) by yourself."]
						);
					</OnLoad>
					<OnClick function="PagingSettingsFrameOverrideModifiers_OnClick" />
				</Scripts>
			</CheckButton>
			
			<ScrollFrame name="$parentEditSelector" inherits="UIPanelScrollFrameTemplate">
				<Anchors>
					<Anchor relativeTo="$parentEditSelectorTextLabel" point="TOPLEFT" relativePoint="BOTTOMLEFT">
						<Offset x="7" y="-15" />
					</Anchor>
				</Anchors>
				
				<Size>
					<AbsDimension x="560" y="65" />
				</Size>
				
				<ScrollChild>
					<EditBox name="$parentText" multiLine="true" autoFocus="false">
						<Size>
							<AbsDimension x="550" y="35" />
						</Size>
						
						<Scripts>
							<OnLoad>
								self.label = getglobal(self:GetName() .. "Label");
								self.label:SetText(PagingL["Selector:"]);
							</OnLoad>
							<OnTextChanged>
								ScrollingEdit_OnTextChanged(self, self:GetParent());
								PagingSettingsFrameEditSelectorText_OnTextChanged(self);
							</OnTextChanged>
							<OnCursorChanged>
								ScrollingEdit_OnCursorChanged(self, x, y, w, h);
							</OnCursorChanged>
							<OnUpdate>
								ScrollingEdit_OnUpdate(self, elapsed, self:GetParent());
							</OnUpdate>
							<OnEscapePressed>
								self:ClearFocus();
							</OnEscapePressed>
							<OnEditFocusLost>
								PagingSettingsFrameEditSelectorText_OnEditFocusLost(self);
							</OnEditFocusLost>
						</Scripts>
						
						<FontString inherits="GameFontHighlight" />
					</EditBox>
				</ScrollChild>
			</ScrollFrame>
			
			<Frame name="$parentEditSelectorTextBackground" enableMouse="false">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parentEditSelector">
						<Offset x="-8" y="8" />
					</Anchor>
					<Anchor point="BOTTOMRIGHT" relativeTo="$parentEditSelector">
						<Offset x="28" y="-8" />
					</Anchor>
				</Anchors>
				
				<Layers>
					<Layer level="OVERLAY">
						<FontString name="$parentHelpText" inherits="GameFontWhite" justifyH="LEFT" justifyV="TOP">
							<Anchors>
								<Anchor relativeTo="$parent" point="TOPLEFT" relativePoint="BOTTOMLEFT">
									<Offset y="-5" />
								</Anchor>
								<Anchor relativeTo="$parent" point="BOTTOMRIGHT" relativePoint="BOTTOMRIGHT">
									<Offset y="-80" />
								</Anchor>
							</Anchors>
						</FontString>
					</Layer>
				</Layers>
				
				<Backdrop bgFile="Interface\Tooltips\UI-Tooltip-Background" edgeFile="Interface\Tooltips\UI-Tooltip-Border" tile="true">
					<EdgeSize>
						<AbsValue val="16"/>
					</EdgeSize>
					<TileSize>
						<AbsValue val="16"/>
					</TileSize>
					<BackgroundInsets>
						<AbsInset left="5" right="5" top="5" bottom="5"/>
					</BackgroundInsets>
				</Backdrop>
				<Scripts>
					<OnLoad>
						self:SetBackdropBorderColor(TOOLTIP_DEFAULT_COLOR.r, TOOLTIP_DEFAULT_COLOR.g, TOOLTIP_DEFAULT_COLOR.b);
						self:SetBackdropColor(TOOLTIP_DEFAULT_BACKGROUND_COLOR.r, TOOLTIP_DEFAULT_BACKGROUND_COLOR.g, TOOLTIP_DEFAULT_BACKGROUND_COLOR.b);
						
						self.helpText = getglobal(self:GetName() .. "HelpText");
						self.helpText:SetText(
							PagingL["Use macro modifier syntax to specify the page numbers, separated by semicolons."] .." "..
							PagingL["If a condition is missing a page number, it will use the default page instead."] .." "..
							PagingL["Make sure the selector ends with a semicolon (%s)."]:format(NORMAL_FONT_COLOR_CODE .. ";" .. FONT_COLOR_CODE_CLOSE)
						);
					</OnLoad>
				</Scripts>
			</Frame>
		</Frames>
		
		<Scripts>
			<OnLoad function="PagingSettingsFrame_OnLoad" />
			<OnEvent function="PagingSettingsFrame_OnEvent" />
		</Scripts>
	</Frame>
</Ui>